@startuml
actor Cliente
participant "PrestamoController" as PC
participant "Prestamo" as P
participant "ClienteController" as CC
participant "Cliente" as C
participant "CajaAhorro" as CA
participant "Operacion" as O

Cliente -> PC: pagarCuotaPrestamo(nroPrestamo)
activate PC

' Buscar préstamo (loop y opt)
loop cada préstamo<listaPrestamos>


    opt si nroPrestamo coincide
        PC -> P: getNroPrestamo()
        activate P
        PC <-- P: Return Prestamo
        deactivate P
    end
end

' Obtener valor de la cuota
PC -> P: obtenerValorCuota()
activate P
PC <-- P: valorCuota
deactivate P

' Buscar cliente solicitante
PC -> CC: buscarClientePorNro(P.getNroCliente())
activate CC
' Buscar cliente (loop y opt)
loop por cada cliente en listadoClientes

    opt si nroCliente coincide
        CC -> C: getNroCliente()
        activate C
        CC <-- C: Cliente
        deactivate C
    end
end
CC -> PC: Cliente
deactivate CC

' Obtener caja de ahorro
PC -> C: getCajaAhorro()
activate C
C --> PC: CajaAhorro
deactivate C

' Debitar dinero
PC -> CA: debitarDinero(valorCuota)
activate CA

' Crear operación y registrar
PC -> CA: registrarOperacion(Operacion)
deactivate CA

PC -> O: Operacion(fecha, tipoOperacion EXTRACCION, valorCuota)
activate O
O --> PC: Operacion Registrada
deactivate O

PC --> Cliente: cuota pagada
deactivate PC
@enduml