@startuml
        actor Cliente
        participant "ClienteController" as CC
        participant "Cliente" as C
        participant "Cliente (Garante)" as CG
        participant "PrestamoController" as PC
        participant "PrestamoHipotecario" as PH
        participant "Operacion" as O
        participant "CajaAhorro" as CA

        Cliente -> CC: solicitarPrestamoHipotecario(nroCliente, monto, plazo, tasa, nroClienteGarante)
        activate CC

        ' Buscar cliente solicitante (loop y opt)
        loop por cada cliente en listadoClientes
            opt si nroCliente coincide
                CC -> C: getNroCliente()
                CC <-- C: Cliente
            end
        end

        ' Buscar cliente garante (loop y opt)
        loop por cada cliente en listadoClientes
            opt si nroCliente coincide
                CC -> CG: getNroCliente()
                CC <-- CG: Cliente (Garante)
            end
        end

        CC -> PC: registrarPrestamoHipotecario(nroPrestamo, plazo, nroCliente, monto, tasa, nroClienteGarante)
        activate PC

        PC -> PH: PrestamoHipotecario(nroPrestamo, plazo, C, monto, tasa, CG)
        activate PH
        PC <-- PH: New PrestamoHipotecario
        deactivate PH
        PC --> CC: confirmación de préstamo hipotecario
        deactivate PC

        CC -> C: getCajaAhorro(nroCliente)
        activate C
        C --> CC: CajaAhorro
        deactivate C


        CC -> CA: acreditarSaldo(saldo - gastosOperativos)
        activate CA
        CA --> CC: CajaAhorro actualizada
        deactivate CA

        CC -> O: crearOperacion(fecha, INGRESO, monto - gastosNotariales)
        activate O
        O --> CC: Operacion Registrada Lista<CajaAhorro>
        deactivate O

        deactivate C
        deactivate PC

        CC --> Cliente: préstamo hipotecario emitido
        deactivate CC
        @enduml